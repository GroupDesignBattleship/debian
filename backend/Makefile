#!/usr/bin/make -rf
all: lws install-plugin frontend

PREFIX ?= /usr

make-datadir:
	mkdir -p build/datadir
	cp -rv example-config/ build/datadir/config

lws: make-datadir
	cd build && CFLAGS=-Wno-error cmake ../libwebsockets -DLWS_WITH_LWSWS=1 -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_SKIP_RPATH=1
	cd build && make DESTDIR=${PWD}/datadir PREFIX=

install-plugin: make-datadir libprotocol_battleship.so
	install -d build/datadir/share/libwebsockets-test-server/plugins
	install libprotocol_battleship.so build/datadir/share/libwebsockets-test-server/plugins/

CC=gcc
CFLAGS += -fPIC
CFLAGS += -ggdb3
CFLAGS += -Ibuild/
LDLIBS += -ljansson
CFLAGS += $(shell python3-config --cflags)
LDFLAGS += $(shell python3-config --ldflags)
LDLIBS += $(shell python3-config --libs)

PY_SRCS = $(wildcard bship_logic/*.pyx)
PY_SRCS += $(wildcard bship_logic/*.py)
PY_SRCS += $(wildcard bship_logic/*.pxd)

# C source generated by Cython, used in protocol_battleships.c
bship_logic.c bship_logic.h: $(PY_SRCS)
	cython bship_logic/__init__.pyx -o bship_logic.c

# This shared object is used by the unit tests (it's a loadable Python
# module)
bship_logic.so: bship_logic.c
	$(CC) -shared bship_logic.c dummy_functions.c $(LDLIBS) $(CFLAGS) $(LDFLAGS) -o bship_logic.so

libprotocol_battleship.so: bship_logic.o protocol_battleship.o 
	$(CC) -shared $^ $(LDLIBS) -o $@

clean:
	rm -rf build
	rm -f protocol_battleship.o libprotocol_battleship.so bship_logic.o bship_logic.c bship_logic.h dummy_functions.o bship_logic.so

run:
	lwsws -c /etc/battleship

valgrind:
	LD_PRELOAD=/usr/share/libwebsockets-test-server/plugins/libprotocol_battleship.so valgrind --leak-check=full --read-var-info=yes --track-origins=yes /usr/bin/lwsws -c /etc/battleship

test: bship_logic.so
	python3 -m unittest tests -v

frontend:
	cd ../frontend && npm install && npm run build

install:
	install -d $(DESTDIR)/etc/battleship
	cp -drv --no-preserve=ownership build/datadir/config/conf* $(DESTDIR)/etc/battleship/
	install -D build/datadir/share/libwebsockets-test-server/plugins/libprotocol_battleship.so $(DESTDIR)$(PREFIX)/share/libwebsockets-test-server/plugins/libprotocol_battleship.so 
	install -D build/bin/lwsws $(DESTDIR)$(PREFIX)/bin/lwsws
	install -m0644 -D battleship.service $(DESTDIR)/lib/systemd/system/battleship.service
	install -D build/lib/libwebsockets.so.9 $(DESTDIR)$(PREFIX)/lib/libwebsockets.so.9
	install -m0644 -D ../frontend/index.html $(DESTDIR)$(PREFIX)/share/battleship/index.html
	cp -drv --no-preserve=ownership ../frontend/dist $(DESTDIR)$(PREFIX)/share/battleship/

# This is only for manual use: making the Debian package doesn't use this
uninstall:
	rm -rf $(DESTDIR)$(PREFIX)/share/battleship
	rm -rf $(DESTDIR)/etc/battleship
	rm -f $(DESTDIR)$(PREFIX)/bin/lwsws
	rm -f $(DESTDIR)$(PREFIX)/share/libwebsockets-test-server/plugins/libprotocol_battleship.so
	cd $(DESTDIR)$(PREFIX)/share; \
	rmdir --ignore-fail-on-non-empty -p libwebsockets-test-server/plugins
	rm -f $(DESTDIR)$(PREFIX)/lib/libwebsockets.so.9
	rm -f $(DESTDIR)/lib/systemd/system/battleship.service

deb:
	fakeroot debian/rules clean binary
